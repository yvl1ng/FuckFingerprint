<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f688e18c-dd7c-4654-8b2f-84494734c4ee" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="tsconfig.json" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/SDK/Go/1.23" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2nEc7hVImpk6BGOJTqw0EYsuZoh" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build FuckFingerprint.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.BenchmarkCheckFingerprint in FuckFingerprint.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestCheckFingerprint in FuckFingerprint.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestCheckFingerprint2 in FuckFingerprint.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestFind in FuckFingerprint (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestFind in FuckFingerprint.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestParseFingerprints in FuckFingerprint.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestStart in FuckFingerprint.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Administrator&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;onboarding.tips.debug.path&quot;: &quot;D:/Projects/Go/FuckFingerprint/main.go&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Projects\Go\FuckFingerprint\_test" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestParseFingerprints in FuckFingerprint">
    <configuration name="BenchmarkCheckFingerprint in FuckFingerprint" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FuckFingerprint" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="FuckFingerprint" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <pattern value="^\QBenchmarkCheckFingerprint\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCheckFingerprint in FuckFingerprint" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FuckFingerprint" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="FuckFingerprint" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCheckFingerprint\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCheckFingerprint2 in FuckFingerprint" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FuckFingerprint" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="FuckFingerprint" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCheckFingerprint2\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseFingerprints in FuckFingerprint" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FuckFingerprint" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="FuckFingerprint" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestParseFingerprints\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStart in FuckFingerprint" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FuckFingerprint" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="FuckFingerprint" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestStart\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestParseFingerprints in FuckFingerprint" />
        <item itemvalue="Go Test.TestStart in FuckFingerprint" />
        <item itemvalue="Go Test.TestCheckFingerprint2 in FuckFingerprint" />
        <item itemvalue="Go Test.BenchmarkCheckFingerprint in FuckFingerprint" />
        <item itemvalue="Go Test.TestCheckFingerprint in FuckFingerprint" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-5df93f7ad4aa-df9ad98b711f-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-242.23339.24" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-GO-242.23339.24" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="HEAD" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>